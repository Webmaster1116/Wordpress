<?php
 namespace MailPoetVendor\Symfony\Component\Validator\Mapping\Loader; if (!defined('ABSPATH')) exit; use MailPoetVendor\Symfony\Component\Validator\Exception\MappingException; use MailPoetVendor\Symfony\Component\Validator\Mapping\ClassMetadata; class LoaderChain implements \MailPoetVendor\Symfony\Component\Validator\Mapping\Loader\LoaderInterface { protected $loaders; public function __construct(array $loaders) { foreach ($loaders as $loader) { if (!$loader instanceof \MailPoetVendor\Symfony\Component\Validator\Mapping\Loader\LoaderInterface) { throw new \MailPoetVendor\Symfony\Component\Validator\Exception\MappingException(\sprintf('Class "%s" is expected to implement LoaderInterface.', \get_class($loader))); } } $this->loaders = $loaders; } public function loadClassMetadata(\MailPoetVendor\Symfony\Component\Validator\Mapping\ClassMetadata $metadata) { $success = \false; foreach ($this->loaders as $loader) { $success = $loader->loadClassMetadata($metadata) || $success; } return $success; } public function getLoaders() { return $this->loaders; } } 