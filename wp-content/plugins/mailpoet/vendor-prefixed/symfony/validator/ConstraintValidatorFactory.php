<?php
 namespace MailPoetVendor\Symfony\Component\Validator; if (!defined('ABSPATH')) exit; use MailPoetVendor\Symfony\Component\Validator\Constraints\ExpressionValidator; class ConstraintValidatorFactory implements \MailPoetVendor\Symfony\Component\Validator\ConstraintValidatorFactoryInterface { protected $validators = []; public function __construct() { } public function getInstance(\MailPoetVendor\Symfony\Component\Validator\Constraint $constraint) { $className = $constraint->validatedBy(); if (!isset($this->validators[$className])) { $this->validators[$className] = 'validator.expression' === $className ? new \MailPoetVendor\Symfony\Component\Validator\Constraints\ExpressionValidator() : new $className(); } return $this->validators[$className]; } } 