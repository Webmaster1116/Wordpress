<?php
 namespace MailPoetVendor\Twig\Extension; if (!defined('ABSPATH')) exit; use MailPoetVendor\Twig\NodeVisitor\NodeVisitorInterface; use MailPoetVendor\Twig\TokenParser\TokenParserInterface; use MailPoetVendor\Twig\TwigFilter; use MailPoetVendor\Twig\TwigFunction; use MailPoetVendor\Twig\TwigTest; final class StagingExtension extends \MailPoetVendor\Twig\Extension\AbstractExtension { private $functions = []; private $filters = []; private $visitors = []; private $tokenParsers = []; private $tests = []; public function addFunction(\MailPoetVendor\Twig\TwigFunction $function) { if (isset($this->functions[$function->getName()])) { throw new \LogicException(\sprintf('Function "%s" is already registered.', $function->getName())); } $this->functions[$function->getName()] = $function; } public function getFunctions() { return $this->functions; } public function addFilter(\MailPoetVendor\Twig\TwigFilter $filter) { if (isset($this->filters[$filter->getName()])) { throw new \LogicException(\sprintf('Filter "%s" is already registered.', $filter->getName())); } $this->filters[$filter->getName()] = $filter; } public function getFilters() { return $this->filters; } public function addNodeVisitor(\MailPoetVendor\Twig\NodeVisitor\NodeVisitorInterface $visitor) { $this->visitors[] = $visitor; } public function getNodeVisitors() { return $this->visitors; } public function addTokenParser(\MailPoetVendor\Twig\TokenParser\TokenParserInterface $parser) { if (isset($this->tokenParsers[$parser->getTag()])) { throw new \LogicException(\sprintf('Tag "%s" is already registered.', $parser->getTag())); } $this->tokenParsers[$parser->getTag()] = $parser; } public function getTokenParsers() { return $this->tokenParsers; } public function addTest(\MailPoetVendor\Twig\TwigTest $test) { if (isset($this->tests[$test->getName()])) { throw new \LogicException(\sprintf('Test "%s" is already registered.', $test->getName())); } $this->tests[$test->getName()] = $test; } public function getTests() { return $this->tests; } } \class_alias('MailPoetVendor\\Twig\\Extension\\StagingExtension', 'MailPoetVendor\\Twig_Extension_Staging'); 