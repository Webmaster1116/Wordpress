<?php
 namespace MailPoetVendor\Twig\NodeVisitor; if (!defined('ABSPATH')) exit; use MailPoetVendor\Twig\Environment; use MailPoetVendor\Twig\Node\Node; abstract class AbstractNodeVisitor implements \MailPoetVendor\Twig\NodeVisitor\NodeVisitorInterface { public final function enterNode(\MailPoetVendor\Twig\Node\Node $node, \MailPoetVendor\Twig\Environment $env) { return $this->doEnterNode($node, $env); } public final function leaveNode(\MailPoetVendor\Twig\Node\Node $node, \MailPoetVendor\Twig\Environment $env) { return $this->doLeaveNode($node, $env); } protected abstract function doEnterNode(\MailPoetVendor\Twig\Node\Node $node, \MailPoetVendor\Twig\Environment $env); protected abstract function doLeaveNode(\MailPoetVendor\Twig\Node\Node $node, \MailPoetVendor\Twig\Environment $env); } \class_alias('MailPoetVendor\\Twig\\NodeVisitor\\AbstractNodeVisitor', 'MailPoetVendor\\Twig_BaseNodeVisitor'); 