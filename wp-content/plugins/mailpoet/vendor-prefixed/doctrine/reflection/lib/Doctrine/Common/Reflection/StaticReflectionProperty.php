<?php
 namespace MailPoetVendor\Doctrine\Common\Reflection; if (!defined('ABSPATH')) exit; use ReflectionException; use ReflectionProperty; class StaticReflectionProperty extends \ReflectionProperty { protected $staticReflectionParser; protected $propertyName; public function __construct(\MailPoetVendor\Doctrine\Common\Reflection\StaticReflectionParser $staticReflectionParser, $propertyName) { $this->staticReflectionParser = $staticReflectionParser; $this->propertyName = $propertyName; } public function getName() { return $this->propertyName; } protected function getStaticReflectionParser() { return $this->staticReflectionParser->getStaticReflectionParserForDeclaringClass('property', $this->propertyName); } public function getDeclaringClass() { return $this->getStaticReflectionParser()->getReflectionClass(); } public function getDocComment() { return $this->getStaticReflectionParser()->getDocComment('property', $this->propertyName); } public function getUseStatements() { return $this->getStaticReflectionParser()->getUseStatements(); } public static function export($class, $name, $return = \false) { throw new \ReflectionException('Method not implemented'); } public function getModifiers() { throw new \ReflectionException('Method not implemented'); } public function getValue($object = null) { throw new \ReflectionException('Method not implemented'); } public function isDefault() { throw new \ReflectionException('Method not implemented'); } public function isPrivate() { throw new \ReflectionException('Method not implemented'); } public function isProtected() { throw new \ReflectionException('Method not implemented'); } public function isPublic() { throw new \ReflectionException('Method not implemented'); } public function isStatic() { throw new \ReflectionException('Method not implemented'); } public function setAccessible($accessible) { throw new \ReflectionException('Method not implemented'); } public function setValue($object, $value = null) { throw new \ReflectionException('Method not implemented'); } public function __toString() { throw new \ReflectionException('Method not implemented'); } } 