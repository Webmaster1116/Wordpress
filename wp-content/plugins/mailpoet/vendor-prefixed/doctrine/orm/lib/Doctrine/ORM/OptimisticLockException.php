<?php
 namespace MailPoetVendor\Doctrine\ORM; if (!defined('ABSPATH')) exit; class OptimisticLockException extends \MailPoetVendor\Doctrine\ORM\ORMException { private $entity; public function __construct($msg, $entity) { parent::__construct($msg); $this->entity = $entity; } public function getEntity() { return $this->entity; } public static function lockFailed($entity) { return new self("The optimistic lock on an entity failed.", $entity); } public static function lockFailedVersionMismatch($entity, $expectedLockVersion, $actualLockVersion) { $expectedLockVersion = $expectedLockVersion instanceof \DateTime ? $expectedLockVersion->getTimestamp() : $expectedLockVersion; $actualLockVersion = $actualLockVersion instanceof \DateTime ? $actualLockVersion->getTimestamp() : $actualLockVersion; return new self("The optimistic lock failed, version " . $expectedLockVersion . " was expected, but is actually " . $actualLockVersion, $entity); } public static function notVersioned($entityName) { return new self("Cannot obtain optimistic lock on unversioned entity " . $entityName, null); } } 