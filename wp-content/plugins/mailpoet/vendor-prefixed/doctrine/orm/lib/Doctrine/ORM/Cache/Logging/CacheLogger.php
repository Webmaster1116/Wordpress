<?php
 namespace MailPoetVendor\Doctrine\ORM\Cache\Logging; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\ORM\Cache\CollectionCacheKey; use MailPoetVendor\Doctrine\ORM\Cache\EntityCacheKey; use MailPoetVendor\Doctrine\ORM\Cache\QueryCacheKey; interface CacheLogger { public function entityCachePut($regionName, \MailPoetVendor\Doctrine\ORM\Cache\EntityCacheKey $key); public function entityCacheHit($regionName, \MailPoetVendor\Doctrine\ORM\Cache\EntityCacheKey $key); public function entityCacheMiss($regionName, \MailPoetVendor\Doctrine\ORM\Cache\EntityCacheKey $key); public function collectionCachePut($regionName, \MailPoetVendor\Doctrine\ORM\Cache\CollectionCacheKey $key); public function collectionCacheHit($regionName, \MailPoetVendor\Doctrine\ORM\Cache\CollectionCacheKey $key); public function collectionCacheMiss($regionName, \MailPoetVendor\Doctrine\ORM\Cache\CollectionCacheKey $key); public function queryCachePut($regionName, \MailPoetVendor\Doctrine\ORM\Cache\QueryCacheKey $key); public function queryCacheHit($regionName, \MailPoetVendor\Doctrine\ORM\Cache\QueryCacheKey $key); public function queryCacheMiss($regionName, \MailPoetVendor\Doctrine\ORM\Cache\QueryCacheKey $key); } 