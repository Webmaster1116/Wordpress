<?php
 namespace MailPoetVendor\Doctrine\ORM\Cache; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\ORM\EntityManagerInterface; class EntityCacheEntry implements \MailPoetVendor\Doctrine\ORM\Cache\CacheEntry { public $data; public $class; public function __construct($class, array $data) { $this->class = $class; $this->data = $data; } public static function __set_state(array $values) { return new self($values['class'], $values['data']); } public function resolveAssociationEntries(\MailPoetVendor\Doctrine\ORM\EntityManagerInterface $em) { return \array_map(function ($value) use($em) { if (!$value instanceof \MailPoetVendor\Doctrine\ORM\Cache\AssociationCacheEntry) { return $value; } return $em->getReference($value->class, $value->identifier); }, $this->data); } } 