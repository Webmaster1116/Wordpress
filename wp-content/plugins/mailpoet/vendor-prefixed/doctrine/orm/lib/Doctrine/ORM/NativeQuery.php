<?php
 namespace MailPoetVendor\Doctrine\ORM; if (!defined('ABSPATH')) exit; final class NativeQuery extends \MailPoetVendor\Doctrine\ORM\AbstractQuery { private $_sql; public function setSQL($sql) : self { $this->_sql = $sql; return $this; } public function getSQL() { return $this->_sql; } protected function _doExecute() { $parameters = []; $types = []; foreach ($this->getParameters() as $parameter) { $name = $parameter->getName(); $value = $this->processParameterValue($parameter->getValue()); $type = $parameter->getValue() === $value ? $parameter->getType() : \MailPoetVendor\Doctrine\ORM\Query\ParameterTypeInferer::inferType($value); $parameters[$name] = $value; $types[$name] = $type; } if ($parameters && \is_int(\key($parameters))) { \ksort($parameters); \ksort($types); $parameters = \array_values($parameters); $types = \array_values($types); } return $this->_em->getConnection()->executeQuery($this->_sql, $parameters, $types, $this->_queryCacheProfile); } } 