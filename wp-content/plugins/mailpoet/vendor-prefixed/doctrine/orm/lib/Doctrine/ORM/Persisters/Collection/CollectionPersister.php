<?php
 namespace MailPoetVendor\Doctrine\ORM\Persisters\Collection; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\Common\Collections\Criteria; use MailPoetVendor\Doctrine\ORM\PersistentCollection; interface CollectionPersister { public function delete(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection); public function update(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection); public function count(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection); public function slice(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection, $offset, $length = null); public function contains(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection, $element); public function containsKey(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection, $key); public function get(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection, $index); public function loadCriteria(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection, \MailPoetVendor\Doctrine\Common\Collections\Criteria $criteria); } 