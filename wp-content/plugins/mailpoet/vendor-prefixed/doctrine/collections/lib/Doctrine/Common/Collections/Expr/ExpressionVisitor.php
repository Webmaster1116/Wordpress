<?php
 namespace MailPoetVendor\Doctrine\Common\Collections\Expr; if (!defined('ABSPATH')) exit; abstract class ExpressionVisitor { public abstract function walkComparison(\MailPoetVendor\Doctrine\Common\Collections\Expr\Comparison $comparison); public abstract function walkValue(\MailPoetVendor\Doctrine\Common\Collections\Expr\Value $value); public abstract function walkCompositeExpression(\MailPoetVendor\Doctrine\Common\Collections\Expr\CompositeExpression $expr); public function dispatch(\MailPoetVendor\Doctrine\Common\Collections\Expr\Expression $expr) { switch (\true) { case $expr instanceof \MailPoetVendor\Doctrine\Common\Collections\Expr\Comparison: return $this->walkComparison($expr); case $expr instanceof \MailPoetVendor\Doctrine\Common\Collections\Expr\Value: return $this->walkValue($expr); case $expr instanceof \MailPoetVendor\Doctrine\Common\Collections\Expr\CompositeExpression: return $this->walkCompositeExpression($expr); default: throw new \RuntimeException("Unknown Expression " . \get_class($expr)); } } } 